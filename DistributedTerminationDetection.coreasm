CoreASM TerminationDetection

use Standard
use StandardPlugins
use Signature
use MathPlugin
use TimePlugin

derived numMachines = 100
enum COLOR = {black, white}
enum STATUS = {active, inactive}

universe MACHINE
universe Agents = {protocol, activation, p, supervisor}

function color: MACHINE -> COLOR
function token: MACHINE -> TOKEN
function status: MACHINE -> STATUS
function nextMachine: MACHINE -> MACHINE

init initRule

rule initRule = {
	
	if numMachines > 1 then {
		extend MACHINE with m do {
			initializeMachine(m)
		}
		numMachines := numMachines - 1;
	}
	program(self) := undef
}

rule initializeMachine(m) {
	if randomvalue > 0.5 then status(m) := active else status(m) := inactive
}